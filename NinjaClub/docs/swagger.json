{
    "openapi": "3.0.2",
    "info": {
        "title": "Ninja Club",
        "version": "1.0.0",
        "description": "Ninja Club API"
    },
    "paths": {
        "/members": {
            "get": {
                "tags": [
                    "Members"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of members": {
                                        "value": [
                                            "John Doe",
                                            "Jane Smith",
                                            "Peter Jones"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return a list of members"
                    }
                },
                "summary": "Get list of members from api",
                "description": "Returns a list of all members in the API to the requesting user"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/member"
                            },
                            "examples": {
                                "Create of a member": {
                                    "value": {
                                        "FirstName": "Kaupo",
                                        "LastName": "Doe",
                                        "Address": "Kuusk 1 Oks 2",
                                        "PhoneNumber": "5556661111",
                                        "Email": "john.doe@example.com",
                                        "RegistrationDate": "01.11.2000",
                                        "Active": true,
                                        "Level": 5
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Members"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "member that is added": {
                                        "value": [
                                            {
                                                "MemberID": 2,
                                                "FirstName": "Jane",
                                                "LastName": "Smith",
                                                "Adress": "Paju 5 Leht 3",
                                                "Phonenumber": "5557772222",
                                                "Email": "jane.smith@example.com",
                                                "RegistrationDate": "12.06.2005",
                                                "Active": false,
                                                "Level": 4
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return code 201 to user if creation of new member was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "error": {
                                        "value": [
                                            {
                                                "error": "One or more parameters missing."
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return status 400 to the user, if one or multiple parameters are missing."
                    }
                },
                "summary": "Add new member",
                "description": "Add new member into the array."
            }
        },
        "/members/{id}": {
            "get": {
                "tags": [
                    "MemberID"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "examples": {
                                    "Get for a full details member": {
                                        "value": {
                                            "MemberID": 1,
                                            "FirstName": "John2",
                                            "LastName": "Doe",
                                            "Address": "Kuusk 1 Oks 2",
                                            "PhoneNumber": "5556661111",
                                            "Email": "john.doe@example.com",
                                            "RegistrationDate": "01.11.2000",
                                            "Active": true,
                                            "Level": 6
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returns details of Member to the user"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Invalid member ID": {
                                        "value": {
                                            "error": "Invalid Id entered."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "No found member": {
                                        "value": {
                                            "error": "Member was not found in database."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if member with this ID is not found."
                    }
                },
                "summary": "Get full details for a member",
                "description": "Returns full details of a given id member"
            },
            "put": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/member"
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "MemberID": 1,
                                        "FirstName": "Kaupo",
                                        "LastName": "Doe",
                                        "Address": "Kuusk 1 Oks 2",
                                        "PhoneNumber": "5556661111",
                                        "Email": "john.doe@example.com",
                                        "RegistrationDate": "01.11.2000",
                                        "Active": true,
                                        "Level": 5
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "MemberID"
                ],
                "parameters": [
                    {
                        "examples": {
                            "Member ID": {
                                "value": "1"
                            }
                        },
                        "name": "id",
                        "description": "This is id of member the user has requested.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Member was created": {
                                        "value": {
                                            "error": "Created successfully."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "The member to be updated is not found in the array"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Member ID was invalid": {
                                        "value": {
                                            "error": "Invalid Id entered."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Member ID not found": {
                                        "value": {
                                            "error": "Id was not found in member array."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if member with this ID is not found."
                    }
                },
                "summary": "Update full details for a member"
            },
            "delete": {
                "tags": [
                    "MemberID"
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Successfully deleted": {
                                        "value": {
                                            "error": "no content"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Bad request": {
                                        "value": "\n[\n  {\n    \"error\": \"Member ID was bad request.\"\n  }\n]"
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was bad request."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Member ID was not found.": {
                                        "value": [
                                            {
                                                "error": "Member\\w+ was not found in member array."
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was not found."
                    }
                },
                "summary": "Delete full details for a member"
            },
            "parameters": [
                {
                    "examples": {
                        "Member ID": {
                            "value": "1"
                        }
                    },
                    "name": "id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/coaches": {
            "get": {
                "tags": [
                    "Coaches"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of coaches": {
                                        "value": [
                                            "Paul Walker",
                                            "V-Verten",
                                            "Toomas Ilves"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return a list of members"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Coach list not found": {
                                        "value": {
                                            "error": "Check Database"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "No return a list of coaches"
                    }
                },
                "summary": "Get list of coaches from api",
                "description": "Returns a list of all coaches in the API to the requesting user"
            },
            "post": {
                "tags": [
                    "Coaches"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/coach"
                                },
                                "examples": {
                                    "Create of a coach": {
                                        "value": {
                                            "CoachID": 1,
                                            "GroupID": 1,
                                            "FirstName": "Ott",
                                            "LastName": "Tänak",
                                            "Adress": "Kuusk 1 Oks 2",
                                            "Phonenumber": "5556661111",
                                            "Email": "john.doe@example.com"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return code 201 to user if creation of new coach was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "error": {
                                        "value": {
                                            "error": "One or more parameters missing."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status 400 to the user, if one or multiple parameters are missing."
                    }
                },
                "summary": "Add new coach",
                "description": "Add new coach into the array."
            }
        },
        "/coaches/{id}/": {
            "get": {
                "tags": [
                    "CoachID"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Get a details a coach": {
                                        "value": {
                                            "CoachID": 97,
                                            "GroupID": 82,
                                            "FirstName": "jl6",
                                            "LastName": "ef0nlq1",
                                            "Address": "ju",
                                            "Phonenumber": "mo",
                                            "Email": ""
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returns details of Member to the user"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Invalid coach ID": {
                                        "value": {
                                            "error": "Invalid Id entered."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "No found coach": {
                                        "value": {
                                            "error": "Coach was not found in database."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if Coach with this ID is not found."
                    }
                },
                "summary": "Get full details for a coach",
                "description": "Returns full details of a given id coach"
            },
            "put": {
                "tags": [
                    "CoachID"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Coach created succesfully.": {
                                        "value": {
                                            "error": "Created successfully."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "{\n    \"error\": \"Created successfully.\"\n}"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Coach ID was invalid": {
                                        "value": {
                                            "error": "Invalid Id entered."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "examples": {
                                    "Coach ID was not found. ": {
                                        "value": {
                                            "error": "Id was not found in coaches array."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if coach with this ID is not found."
                    }
                },
                "summary": "Update full details for a coach"
            },
            "delete": {
                "tags": [
                    "CoachID"
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Succesfully deleted": {
                                        "value": {
                                            "error": "no content"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Bad request": {
                                        "value": {
                                            "error": "Coach ID was bad request."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was bad request."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Coach ID was not found.": {
                                        "value": {
                                            "error": "Member was not found in member array."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was not found."
                    }
                },
                "summary": "Delete full details for a member"
            },
            "parameters": [
                {
                    "examples": {
                        "Coach ID": {
                            "value": "/coaches/{1}/"
                        }
                    },
                    "name": "id",
                    "description": "This is id of coach the user has requested.",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/grouplist": {
            "get": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of groups": {
                                        "value": [
                                            "Starter",
                                            "Pro"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return a list of groups"
                    }
                },
                "summary": "Get list of group from api",
                "description": "Returns a list of all group in the API to the requesting user"
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "group that is added": {
                                        "value": {
                                            "GroupID": 1,
                                            "GroupName": "Starter",
                                            "Schedule": "12.12.2024",
                                            "MemberID": "1",
                                            "CoachID": "1"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return code 201 to user if creation of new group was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "error": {
                                        "value": {
                                            "error": "One or more parameters missing."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status 400 to the user, if one or multiple parameters are missing."
                    }
                },
                "summary": "Add new group",
                "description": "Add new group into the array."
            }
        },
        "/grouplist/{id}": {
            "get": {
                "tags": [
                    "GroupID"
                ],
                "parameters": [
                    {
                        "examples": {
                            "Group ID": {
                                "value": "1"
                            }
                        },
                        "name": "id",
                        "description": "This is id of the group the user has requested.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Get full details of group": {
                                        "value": {
                                            "GroupID": 1,
                                            "CoachID": "John",
                                            "MemberID": "Doe",
                                            "GroupName": "Black belt",
                                            "Schedule": "Monday Thursday Wednesday"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returns full details of group to user."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Group not found": {
                                        "value": {
                                            "error": "Bad Request."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Group no found": {
                                        "value": {
                                            "error": "Group was not found in database."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if member with this ID is not found."
                    }
                },
                "operationId": "id",
                "summary": "Get full details for training group.",
                "description": "Returns full details of given ID group."
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "examples": {
                                "Example": {
                                    "value": {
                                        "GroupID": 1,
                                        "CoachID": "John",
                                        "MemberID": "Doe",
                                        "GroupName": "Black belt",
                                        "Schedule": "Monday Thursday Wednesday"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "GroupID"
                ],
                "parameters": [
                    {
                        "examples": {
                            "Group ID": {
                                "value": "1"
                            }
                        },
                        "name": "id",
                        "description": "This is id of the group the user has requested.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Group was created": {
                                        "value": {
                                            "error": "Created successfully."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "The group to be updated is not found in the array"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Invalid group ID": {
                                        "value": {
                                            "error": "Invalid Id entered."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return status code 400 to the user if invalid ID was entered."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Group ID not found": {
                                        "value": {
                                            "error": "Id was not found in group array."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Return error 404 to the user if group with this ID is not found."
                    }
                },
                "summary": "Update details of a group."
            },
            "delete": {
                "tags": [
                    "GroupID"
                ],
                "responses": {
                    "204": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                },
                                "examples": {
                                    "Deleted successfully.": {
                                        "value": {
                                            "error": "Deleted successfully."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was successful."
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Bad request": {
                                        "value": {
                                            "error": "Member ID was bad request."
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was bad request."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                },
                                "examples": {
                                    "Succesfully deleted": {
                                        "value": {
                                            "error": "no content"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Returned error, in case deletion was not found."
                    }
                },
                "summary": "Delete group details."
            },
            "parameters": [
                {
                    "examples": {
                        "Group ID": {
                            "value": "1"
                        }
                    },
                    "name": "id",
                    "description": "This is id of the group the user has requested.",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/events": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "List of events": {
                                        "value": [
                                            "Shadow Tactics Training",
                                            "Kunoichi Survival Skills",
                                            "Silent Blade Workshop",
                                            "Night Vision Challenge"
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return a list of events"
                    }
                },
                "summary": "Get list of events",
                "description": "Returns a list of events from the api"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/event"
                            },
                            "examples": {
                                "Create an event": {
                                    "value": {
                                        "EventID": "4",
                                        "CoachID": "1",
                                        "Name": "Night Vision Challenge",
                                        "Date": "2025-05-10",
                                        "Location": "Moonlit Temple Grounds",
                                        "Description": "Test your stealth and awareness in low-light conditions in this thrilling night-time event."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "examples": {
                                    "Event that is added": {
                                        "value": [
                                            {
                                                "EventID": "3",
                                                "CoachID": "9",
                                                "Name": "Silent Blade Workshop",
                                                "Date": "2025-04-20",
                                                "Location": "Underground Training Chamber",
                                                "Description": "Hone your skills with the blade and master the silent takedown in this exclusive workshop."
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Return code 201 to user if creation of new event was successful."
                    }
                },
                "summary": "Add new member",
                "description": "Add a new event into the array.\n"
            }
        },
        "/events/{eventId}": {
            "summary": "Path used to manage a single event.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `event`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/event"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `event`."
                    }
                },
                "operationId": "getevent",
                "summary": "Get a event",
                "description": "Gets the details of a single instance of a `event`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `event` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/event"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateevent",
                "summary": "Update a event",
                "description": "Updates an existing `event`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteevent",
                "summary": "Delete a event",
                "description": "Deletes an existing `event`."
            },
            "parameters": [
                {
                    "name": "eventId",
                    "description": "A unique identifier for a `event`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/eventattendees": {
            "summary": "Path used to manage the list of eventattendees.",
            "description": "The REST endpoint/path used to list and create zero or more `eventattendees` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/eventattendees"
                                    }
                                },
                                "examples": {
                                    "Example": {
                                        "value": [
                                            {
                                                "EventAttendeesID": 1,
                                                "MemberID": 101,
                                                "EventID": 202,
                                                "RSVPStatus": "Accepted"
                                            },
                                            {
                                                "EventAttendeesID": 2,
                                                "MemberID": 102,
                                                "EventID": 203,
                                                "RSVPStatus": "Pending"
                                            },
                                            {
                                                "EventAttendeesID": 3,
                                                "MemberID": 103,
                                                "EventID": 204,
                                                "RSVPStatus": "Declined"
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `eventattendees` entities."
                    }
                },
                "operationId": "geteventattendees",
                "summary": "List All eventattendees",
                "description": "Gets a list of all `eventattendees` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `eventattendees` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/eventattendees"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createeventattendees",
                "summary": "Create a eventattendees",
                "description": "Creates a new instance of a `eventattendees`."
            }
        },
        "/eventattendees/{eventattendeesId}": {
            "summary": "Path used to manage a single eventattendees.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `eventattendees`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/eventattendees"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `eventattendees`."
                    }
                },
                "operationId": "geteventattendee",
                "summary": "Get a eventattendees",
                "description": "Gets the details of a single instance of a `eventattendees`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `eventattendees` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/eventattendees"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateeventattendees",
                "summary": "Update a eventattendees",
                "description": "Updates an existing `eventattendees`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteeventattendees",
                "summary": "Delete a eventattendees",
                "description": "Deletes an existing `eventattendees`."
            },
            "parameters": [
                {
                    "name": "eventattendeesId",
                    "description": "A unique identifier for a `eventattendees`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "member": {
                "title": "Root Type for member",
                "description": "example of submittable member",
                "required": [],
                "type": "object",
                "properties": {
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Adress": {
                        "type": "string"
                    },
                    "Phonenumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "RegistrationDate": {
                        "type": "string"
                    },
                    "Active": {
                        "type": "boolean"
                    },
                    "Level": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "MemberID": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "example": {
                    "MemberID": 1,
                    "FirstName": "Jane",
                    "LastName": "Smith",
                    "Adress": "Paju 5 Leht 3",
                    "Phonenumber": "5557772222",
                    "Email": "jane.smith@example.com",
                    "RegistrationDate": "12.06.2005",
                    "Active": false,
                    "Level": 4
                }
            },
            "group": {
                "title": "Root Type for GroupTraining",
                "description": "example of group",
                "type": "object",
                "properties": {
                    "GroupID": {
                        "type": "integer"
                    },
                    "GroupName": {
                        "type": "string"
                    },
                    "Schedule": {
                        "type": "string"
                    },
                    "MemberID": {
                        "type": "integer"
                    },
                    "CoachID": {
                        "type": "integer"
                    }
                },
                "example": {
                    "GroupID": 1,
                    "GroupName": "Starter",
                    "Schedule": "12.12.2024",
                    "MemberID": "1",
                    "CoachID": "1"
                }
            },
            "error": {
                "description": "",
                "type": "object",
                "properties": {
                    "error": {
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "error": "test"
                }
            },
            "coach": {
                "title": "Root Type for coach",
                "description": "exmaple of coach",
                "type": "object",
                "properties": {
                    "CoachID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "GroupID": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "FirstName": {
                        "type": "string"
                    },
                    "LastName": {
                        "type": "string"
                    },
                    "Address": {
                        "type": "string"
                    },
                    "Phonenumber": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    }
                },
                "example": {
                    "CoachID": 1,
                    "GroupID": 1,
                    "FirstName": "Ott",
                    "LastName": "Tänak",
                    "Address": "Kuusk 1 Oks 2",
                    "Phonenumber": "5556661111",
                    "Email": "john.doe@example.com"
                }
            },
            "event": {
                "title": "Root Type for event",
                "description": "example of submittable event",
                "type": "object",
                "properties": {
                    "EventID": {
                        "type": "string"
                    },
                    "CoachID": {
                        "type": "string"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "Date": {
                        "format": "date",
                        "type": "string"
                    },
                    "Location": {
                        "type": "string"
                    },
                    "Description": {
                        "type": "string"
                    }
                },
                "example": "{\n    \"EventID\": '1',\n    \"CoachID\": '6',\n    \"Name\": \"Shadow Tactics Training\",\n    \"Date\": \"2025-02-10\",\n    \"Location\": \"Hidden Dojo, Mountain Pass\",\n    \"Description\": \"Master the art of stealth, agility, and precision in this advanced ninja training session.\"\n}"
            },
            "eventattendees": {
                "title": "Root Type for eventattendees",
                "description": "example of a submittable event attendee",
                "type": "object",
                "properties": {
                    "EventAttendeesID": {
                        "type": "string"
                    },
                    "MemberID": {
                        "type": "string"
                    },
                    "RSVPStatus": {
                        "type": "string"
                    }
                },
                "example": {
                    "EventAttendeesID": "1",
                    "MemberID": "3",
                    "RSVPStatus": "Attending"
                }
            }
        }
    }
}